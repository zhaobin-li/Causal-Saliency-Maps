filter(id %in% included_ids) |>
glimpse()
side <- side |>
pivot_wider(names_from = question, values_from = response) |>
glimpse()
# check no duplicate ids
expect_equal(nrow(side |>
group_by(id) |>
filter(n() > 1)), 0)
side <- side |> mutate(
proportionCorrect = as.numeric(proportionCorrect),
age = round(as.numeric(age)),
meanMainRTsecs = round(as.numeric(meanMainRTsecs)),
totalTimeElapsedmins = round(as.numeric(totalTimeElapsedmins))
) |> glimpse()
side |>
group_by(gender) |>
count()
side |>
ggplot(aes(age)) +
geom_dotplot()
side |>
filter(!is.na(feedback))
side |>
ggplot(aes(meanMainRTsecs)) +
geom_dotplot()
side |>
ggplot(aes(totalTimeElapsedmins)) +
geom_dotplot()
side |>
ggplot(aes(proportionCorrect)) +
geom_dotplot()
side |> summarize(sum(proportionCorrect >= MIN_PROPROTION_CORRECT))
excluded_ids <- side |>
filter(proportionCorrect < MIN_PROPROTION_CORRECT) |>
pull(id)
side <- side |>
mutate(id = fct_anon(factor(id))) |>
glimpse()
# side |> write_csv("experiments/chemicals/counterfactual/wrangled_side.csv")
side |> write_csv("counterfactual/wrangled_side.csv")
df <- df |>
filter(!(id %in% excluded_ids)) |>
glimpse()
# anonymize id
df <- df |>
mutate(id = fct_anon(factor(id))) |>
glimpse()
# save data
# df |> write_csv("experiments/chemicals/counterfactual/wrangled_data.csv")
df |> write_csv("counterfactual/wrangled_data.csv")
# get nested JSON trial data
df <- df |>
rowwise() |>
mutate(trialData = fromJSON(trialData)) |>
unnest(trialData) |>
glimpse()
# restrict to main trials
df <- df |>
filter(trial == "results") |>
glimpse()
# discard attention trials
df <- df |>
filter(isAttention == FALSE) |>
glimpse()
df <- df |>
rename(img = imgNum) |>
select(id, img, labelCompare, promptImg) |>
glimpse()
df <- df |>
mutate(
labelCompare = fct_relevel(factor(labelCompare), ref = "same"),
promptImg = fct_relevel(factor(promptImg), ref = "same")
) |>
glimpse()
df |>
group_by(promptImg, labelCompare) |>
summarise(n())
df |>
group_by(promptImg, id, labelCompare) |>
summarize(n = n()) |>
group_by(promptImg) |>
complete(id, labelCompare, fill = list(n = 0)) |>
group_by(promptImg, id) |>
mutate(p = n / sum(n)) |>
filter(labelCompare == "opp") |>
ggplot(aes(promptImg, p)) +
geom_boxplot() +
ylim(0, 1) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red", size = 2) +
labs(y = 'P(labelCompare == "opp")')
df |>
group_by(promptImg, id, labelCompare) |>
summarize(n = n()) |>
group_by(promptImg) |>
complete(id, labelCompare, fill = list(n = 0)) |>
group_by(promptImg, id) |>
mutate(p = n / sum(n)) |>
filter(labelCompare == "opp") |>
ggplot(aes(promptImg, p)) +
geom_line(aes(group = id, color = id)) +
ylim(0, 1) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red", size = 2) +
labs(y = 'P(labelCompare == "opp")')
#' ---
#' title: " Experiment Counterfactual Power Analysis"
#' author: "ZhaoBin Li, Scott Cheng-Hsin Yang, Tomas Folke, Patrick Shafto"
#' date: "Aug 3rd, 2022"
#' ---
#'
# conda create -n r_chemicals -c conda-forge r-base r-jsonlite r-tidyverse r-ggplot2 r-lme4 r-afex r-furrr r-tictoc -y
library(viridis)
library(binom)
library(tictoc)
library(furrr)
library(sjPlot)
library(afex)
library(lme4)
library(jsonlite)
library(testthat)
library(ggplot2)
library(tidyverse)
MIN_PROPROTION_CORRECT <- 0.8 # attention check threshold
# Wrangle ------------------------------------------------------------
# column names in https://psiturk.readthedocs.io/en/stable/command_line.html?highlight=trialdata.csv#download-datafiles
df <-
# read_csv("experiments/chemicals/counterfactual/psiturk/trialdata.csv",
read_csv("counterfactual/psiturk/trialdata.csv", col_names = c("id", "trialNum", "time", "trialData")) |>
arrange(time) |> # arrange by time
glimpse()
# analyse 1 participant
# df <- df |> filter(id %in% c("debugaRXOD:debugRJE75")) |> glimpse()
# exclude by time
# df <- df |>
#   filter(time >= 1662435024026) |>
#   glimpse()
#
# remove debug attempts
df <- df |>
filter(!str_detect(id, "debug")) |>
glimpse()
# exclude Pat's and ZB's ids
df <- df |>
filter(!str_detect(id, "ABYGLITD9LAX5|A2ISY01HC7N0RA")) |>
glimpse()
# check no duplicate ids
expect_equal(nrow(df |>
group_by(id) |>
filter(n() > 1)), 0)
# save id
included_ids <- df |> pull(id)
# Side dishes -------------------------------------------------------------
side <- read_csv("counterfactual/psiturk/questiondata.csv", col_names = c("id", "question", "response")) |>
glimpse()
side <- side |>
filter(id %in% included_ids) |>
glimpse()
side <- side |>
pivot_wider(names_from = question, values_from = response) |>
glimpse()
# check no duplicate ids
expect_equal(nrow(side |>
group_by(id) |>
filter(n() > 1)), 0)
side <- side |> mutate(
proportionCorrect = as.numeric(proportionCorrect),
age = round(as.numeric(age)),
meanMainRTsecs = round(as.numeric(meanMainRTsecs)),
totalTimeElapsedmins = round(as.numeric(totalTimeElapsedmins))
) |> glimpse()
side |>
group_by(gender) |>
count()
side |>
ggplot(aes(age)) +
geom_dotplot()
side |>
filter(!is.na(feedback))
side |>
ggplot(aes(meanMainRTsecs)) +
geom_dotplot()
side |>
ggplot(aes(totalTimeElapsedmins)) +
geom_dotplot()
side |>
ggplot(aes(proportionCorrect)) +
geom_dotplot()
side |> summarize(sum(proportionCorrect >= MIN_PROPROTION_CORRECT))
excluded_ids <- side |>
filter(proportionCorrect < MIN_PROPROTION_CORRECT) |>
pull(id)
side <- side |>
mutate(id = fct_anon(factor(id))) |>
glimpse()
# side |> write_csv("experiments/chemicals/counterfactual/wrangled_side.csv")
side |> write_csv("counterfactual/wrangled_side.csv")
#' ---
#' title: " Experiment Counterfactual Power Analysis"
#' author: "ZhaoBin Li, Scott Cheng-Hsin Yang, Tomas Folke, Patrick Shafto"
#' date: "Aug 3rd, 2022"
#' ---
#'
# conda create -n r_chemicals -c conda-forge r-base r-jsonlite r-tidyverse r-ggplot2 r-lme4 r-afex r-furrr r-tictoc -y
library(viridis)
library(binom)
library(tictoc)
library(furrr)
library(sjPlot)
library(afex)
library(lme4)
library(jsonlite)
library(testthat)
library(ggplot2)
library(tidyverse)
MIN_PROPROTION_CORRECT <- 0.8 # attention check threshold
# Wrangle ------------------------------------------------------------
# column names in https://psiturk.readthedocs.io/en/stable/command_line.html?highlight=trialdata.csv#download-datafiles
df <-
# read_csv("experiments/chemicals/counterfactual/psiturk/trialdata.csv",
read_csv("counterfactual/psiturk/trialdata.csv", col_names = c("id", "trialNum", "time", "trialData")) |>
arrange(time) |> # arrange by time
glimpse()
# analyse 1 participant
# df <- df |> filter(id %in% c("debugaRXOD:debugRJE75")) |> glimpse()
# exclude by time
# df <- df |>
#   filter(time >= 1662435024026) |>
#   glimpse()
#
# remove debug attempts
df <- df |>
filter(!str_detect(id, "debug")) |>
glimpse()
# exclude Pat's and ZB's ids
df <- df |>
filter(!str_detect(id, "ABYGLITD9LAX5|A2ISY01HC7N0RA")) |>
glimpse()
# check no duplicate ids
expect_equal(nrow(df |>
group_by(id) |>
filter(n() > 1)), 0)
# save id
included_ids <- df |> pull(id)
# Side dishes -------------------------------------------------------------
side <- read_csv("counterfactual/psiturk/questiondata.csv", col_names = c("id", "question", "response")) |>
glimpse()
side <- side |>
filter(id %in% included_ids) |>
glimpse()
side <- side |>
pivot_wider(names_from = question, values_from = response) |>
glimpse()
# check no duplicate ids
expect_equal(nrow(side |>
group_by(id) |>
filter(n() > 1)), 0)
side <- side |> mutate(
proportionCorrect = as.numeric(proportionCorrect),
age = round(as.numeric(age)),
meanMainRTsecs = round(as.numeric(meanMainRTsecs)),
totalTimeElapsedmins = round(as.numeric(totalTimeElapsedmins))
) |> glimpse()
side |>
group_by(gender) |>
count()
side |>
ggplot(aes(age)) +
geom_dotplot()
side |>
filter(!is.na(feedback))
side |>
ggplot(aes(meanMainRTsecs)) +
geom_dotplot()
side |>
ggplot(aes(totalTimeElapsedmins)) +
geom_dotplot()
side |>
ggplot(aes(proportionCorrect)) +
geom_dotplot()
side |> summarize(sum(proportionCorrect >= MIN_PROPROTION_CORRECT))
excluded_ids <- side |>
filter(proportionCorrect < MIN_PROPROTION_CORRECT) |>
pull(id)
side <- side |>
mutate(id = fct_anon(factor(id))) |>
glimpse()
# side |> write_csv("experiments/chemicals/counterfactual/wrangled_side.csv")
side |> write_csv("counterfactual/wrangled_side.csv")
df <- df |>
filter(!(id %in% excluded_ids)) |>
glimpse()
# anonymize id
df <- df |>
mutate(id = fct_anon(factor(id))) |>
glimpse()
# save data
# df |> write_csv("experiments/chemicals/counterfactual/wrangled_data.csv")
df |> write_csv("counterfactual/wrangled_data.csv")
# get nested JSON trial data
df <- df |>
rowwise() |>
mutate(trialData = fromJSON(trialData)) |>
unnest(trialData) |>
glimpse()
# restrict to main trials
df <- df |>
filter(trial == "results") |>
glimpse()
# discard attention trials
df <- df |>
filter(isAttention == FALSE) |>
glimpse()
df <- df |>
rename(img = imgNum) |>
select(id, img, labelCompare, promptImg) |>
glimpse()
df <- df |>
mutate(
labelCompare = fct_relevel(factor(labelCompare), ref = "same"),
promptImg = fct_relevel(factor(promptImg), ref = "same")
) |>
glimpse()
df |>
group_by(promptImg, labelCompare) |>
summarise(n())
df |>
group_by(promptImg, id, labelCompare) |>
summarize(n = n()) |>
group_by(promptImg) |>
complete(id, labelCompare, fill = list(n = 0)) |>
group_by(promptImg, id) |>
mutate(p = n / sum(n)) |>
filter(labelCompare == "opp") |>
ggplot(aes(promptImg, p)) +
geom_boxplot() +
ylim(0, 1) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red", size = 2) +
labs(y = 'P(labelCompare == "opp")')
df |>
group_by(promptImg, id, labelCompare) |>
summarize(n = n()) |>
group_by(promptImg) |>
complete(id, labelCompare, fill = list(n = 0)) |>
group_by(promptImg, id) |>
mutate(p = n / sum(n)) |>
filter(labelCompare == "opp") |>
ggplot(aes(promptImg, p)) +
geom_line(aes(group = id, color = id)) +
ylim(0, 1) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red", size = 2) +
labs(y = 'P(labelCompare == "opp")')
#' ---
#' title: " Experiment Counterfactual Power Analysis"
#' author: "ZhaoBin Li, Scott Cheng-Hsin Yang, Tomas Folke, Patrick Shafto"
#' date: "Aug 3rd, 2022"
#' ---
#'
# conda create -n r_chemicals -c conda-forge r-base r-jsonlite r-tidyverse r-ggplot2 r-lme4 r-afex r-furrr r-tictoc -y
library(viridis)
library(binom)
library(tictoc)
library(furrr)
library(sjPlot)
library(afex)
library(lme4)
library(jsonlite)
library(testthat)
library(ggplot2)
library(tidyverse)
MIN_PROPROTION_CORRECT <- 0.8 # attention check threshold
# Wrangle ------------------------------------------------------------
# column names in https://psiturk.readthedocs.io/en/stable/command_line.html?highlight=trialdata.csv#download-datafiles
df <-
# read_csv("experiments/chemicals/counterfactual/psiturk/trialdata.csv",
read_csv("counterfactual/psiturk/trialdata.csv", col_names = c("id", "trialNum", "time", "trialData")) |>
arrange(time) |> # arrange by time
glimpse()
# analyse 1 participant
# df <- df |> filter(id %in% c("debugaRXOD:debugRJE75")) |> glimpse()
# exclude by time
# df <- df |>
#   filter(time >= 1662435024026) |>
#   glimpse()
#
# remove debug attempts
df <- df |>
filter(!str_detect(id, "debug")) |>
glimpse()
# exclude Pat's and ZB's ids
df <- df |>
filter(!str_detect(id, "ABYGLITD9LAX5|A2ISY01HC7N0RA")) |>
glimpse()
# check no duplicate ids
expect_equal(nrow(df |>
group_by(id) |>
filter(n() > 1)), 0)
# save id
included_ids <- df |> pull(id)
# Side dishes -------------------------------------------------------------
side <- read_csv("counterfactual/psiturk/questiondata.csv", col_names = c("id", "question", "response")) |>
glimpse()
side <- side |>
filter(id %in% included_ids) |>
glimpse()
side <- side |>
pivot_wider(names_from = question, values_from = response) |>
glimpse()
# check no duplicate ids
expect_equal(nrow(side |>
group_by(id) |>
filter(n() > 1)), 0)
side <- side |> mutate(
proportionCorrect = as.numeric(proportionCorrect),
age = round(as.numeric(age)),
meanMainRTsecs = round(as.numeric(meanMainRTsecs)),
totalTimeElapsedmins = round(as.numeric(totalTimeElapsedmins))
) |> glimpse()
side |>
group_by(gender) |>
count()
side |>
ggplot(aes(age)) +
geom_dotplot()
side |>
filter(!is.na(feedback))
side |>
ggplot(aes(meanMainRTsecs)) +
geom_dotplot()
side |>
ggplot(aes(totalTimeElapsedmins)) +
geom_dotplot()
side |>
ggplot(aes(proportionCorrect)) +
geom_dotplot()
side |> summarize(sum(proportionCorrect >= MIN_PROPROTION_CORRECT))
excluded_ids <- side |>
filter(proportionCorrect < MIN_PROPROTION_CORRECT) |>
pull(id)
side <- side |>
mutate(id = fct_anon(factor(id))) |>
glimpse()
# side |> write_csv("experiments/chemicals/counterfactual/wrangled_side.csv")
side |> write_csv("counterfactual/wrangled_side.csv")
# Checks and exclusion ---------------------------------------------------------------
df <- df |>
filter(!(id %in% excluded_ids)) |>
glimpse()
# anonymize id
df <- df |>
mutate(id = fct_anon(factor(id))) |>
glimpse()
# save data
# df |> write_csv("experiments/chemicals/counterfactual/wrangled_data.csv")
df |> write_csv("counterfactual/wrangled_data.csv")
# get nested JSON trial data
df <- df |>
rowwise() |>
mutate(trialData = fromJSON(trialData)) |>
unnest(trialData) |>
glimpse()
# restrict to main trials
df <- df |>
filter(trial == "results") |>
glimpse()
# restrict to practice trials
# df <- df |>
#   filter(trial == "practice") |>
#   glimpse()
# discard attention trials
df <- df |>
filter(isAttention == FALSE) |>
glimpse()
# Visualize ---------------------------------------------------------------
df <- df |>
rename(img = imgNum) |>
select(id, img, labelCompare, promptImg) |>
glimpse()
df <- df |>
mutate(
labelCompare = fct_relevel(factor(labelCompare), ref = "same"),
promptImg = fct_relevel(factor(promptImg), ref = "same")
) |>
glimpse()
df |>
group_by(promptImg, labelCompare) |>
summarise(n())
df |>
group_by(promptImg, id, labelCompare) |>
summarize(n = n()) |>
group_by(promptImg) |>
complete(id, labelCompare, fill = list(n = 0)) |>
group_by(promptImg, id) |>
mutate(p = n / sum(n)) |>
filter(labelCompare == "opp") |>
ggplot(aes(promptImg, p)) +
geom_boxplot() +
ylim(0, 1) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red", size = 2) +
labs(y = 'P(labelCompare == "opp")')
df |>
group_by(promptImg, id, labelCompare) |>
summarize(n = n()) |>
group_by(promptImg) |>
complete(id, labelCompare, fill = list(n = 0)) |>
group_by(promptImg, id) |>
mutate(p = n / sum(n)) |>
filter(labelCompare == "opp") |>
ggplot(aes(promptImg, p)) +
geom_line(aes(group = id, color = id)) +
ylim(0, 1) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red", size = 2) +
labs(y = 'P(labelCompare == "opp")')
